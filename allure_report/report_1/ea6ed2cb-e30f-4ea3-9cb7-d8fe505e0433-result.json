{"name": "test_method_put", "status": "failed", "statusDetails": {"message": "AssertionError: Actual result not equal expected", "trace": "set_up = None, create_and_delete_book = None\n\n    @pytest.mark.development\n    @allure.description(\"Check name, after changed\")\n    def test_method_put(set_up, create_and_delete_book):\n        \"\"\"\n        Проверка на возможность изменения значения поля 'name' с сущ. значением на валидное для поля значение\n        - Тесткейс id: 18\n        \"\"\"\n        name_before_changed = json.loads(Library_api.get_all_books().text)['books'][-1]['name']\n        print(f\"Старое название: {name_before_changed}\")\n        test_object = Library_api.put_new_book(variables.json_all_valid_param_2)\n        name_after_changed = json.loads(Library_api.get_all_books().text)['books'][-1]['name']\n        print(f\"Новое название: {name_after_changed}\")\n>       Checking.check_name_value(name_after_changed, \"Евгений Онегин\")\n\ntests\\functional_test.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual_value = 'Война и мир', expected_value = 'Евгений Онегин'\n\n    @staticmethod\n    def check_name_value(actual_value, expected_value):\n        \"\"\"Метод для проверки значений обязательных полей в ответах запроса\"\"\"\n    \n>       assert actual_value == expected_value, \"Actual result not equal expected\"\nE       AssertionError: Actual result not equal expected\n\nutils\\checking.py:35: AssertionError"}, "description": "Check name, after changed", "steps": [{"name": "GET", "status": "passed", "start": 1675620075441, "stop": 1675620075445}, {"name": "GET", "status": "passed", "start": 1675620075445, "stop": 1675620075449}, {"name": "PUT", "status": "passed", "start": 1675620075449, "stop": 1675620075454}, {"name": "GET", "status": "passed", "start": 1675620075454, "stop": 1675620075457}], "attachments": [{"name": "stdout", "source": "998ae49b-ee87-4187-abac-effefeeafd90-attachment.txt", "type": "text/plain"}], "start": 1675620075441, "stop": 1675620075458, "uuid": "f3382564-265e-4729-aba5-15f0219c2876", "historyId": "64e03dd21e8f4f513ffa580427214cb2", "testCaseId": "156587fbaa8c3522cf9142f5db9e6141", "fullName": "tests.functional_test#test_method_put", "labels": [{"name": "tag", "value": "development"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "functional_test"}, {"name": "host", "value": "LAPTOP-LROB3NJ0"}, {"name": "thread", "value": "12048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.functional_test"}]}